<?xml version="1.0" encoding="UTF-8"?>
<project name="xp-framework-compile" basedir=".">
  <target name="compile:compile" extensionOf="compile"
   depends="-prepare:prepare:dependencies, -compile:sources:php, -compile:sources:xsl, -compile:resources:copy"
  />

  <target name="-compile:sources:php" depends="-compile:filter:generate">
    <mkdir dir="${build.target.classes}"/>

    <copy todir="${build.target.classes}" encoding="iso-8859-1">
      <fileset refid="build.sources.fileset.php"/>
      <filterset refid="xp.filterset.compile"/>
      <cutdirsmapper dirs="1"/>
    </copy>
  </target>

  <target name="-compile:sources:xsl" depends="-compile:filter:generate">
    <copy todir="${build.target.classes}" encoding="iso-8859-1">
      <fileset refid="build.sources.fileset.xsl"/>
      <filterset refid="xp.filterset.compile"/>
      <cutdirsmapper dirs="1"/>
    </copy>
  </target>

  <target name="-compile:resources:copy" depends="-compile:filter:generate">
    <copy todir="${build.target.classes}" encoding="iso-8859-1">
      <fileset refid="build.resources"/>
      <cutdirsmapper dirs="1"/>
    </copy>
  </target>

  <target name="-compile:tests:php" extensionOf="compile" depends="-compile:filter:generate">
    <mkdir dir="${build.target.testClasses}"/>

    <!-- In contract to the regular sources, don't filter tests - some
     !   contributed binary files may become corrupted, then -->
    <copy todir="${build.target.testClasses}" encoding="iso-8859-1">
      <fileset refid="build.testSourceDirectory"/>
      <cutdirsmapper dirs="1"/>
    </copy>
  </target>

  <target name="-compile:filter:generate" depends="-init:configure:ivy">
    <!-- Predefined filterset used on compile -->
    <filterset id="xp.filterset.compile" begintoken="@@" endtoken="@@">
      <filter token="user" value="${user.name}"/>
      <filter token="xp.build.version" value="@@module.revision@@"/>
      <filter token="module.name" value="${ivy.module}"/>
      <filter token="module.org" value="${ivy.organisation}"/>
      <filter token="module.revision" value="${ivy.revision}"/>
      <filter token="module.fullname" value="${ivy.organisation}.${ivy.module}-${ivy.revision}"/>
    </filterset>
  </target>
</project>