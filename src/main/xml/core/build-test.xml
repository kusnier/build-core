<?xml version="1.0" encoding="UTF-8"?>
<project name="xp-framework-test" basedir=".">
  <available property="xp.test.exist.unittest.ini" file="${basedir}/unittest.ini"/>

  <target name="xp.unittest.mkresult">
    <mkdir dir="${build.target}/test-results"/>
    <delete>
      <fileset dir="${build.target}/test-results" includes="*.xml"/>
    </delete>

    <!-- Check for existance of some unittest .ini -->
    <pathconvert property="xp.unittest.has.configuration" refid="build.testConfigurations" setonempty="false"/>
  </target>

  <target name="xp.unittest.from-ini" unless="skip.tests" depends="xp.unittest.mkresult" if="xp.unittest.has.configuration">
    <echo>===> Testing ${ivy.organisation}#${ivy.module} - by configuration</echo>

    <!-- Execute unittest for each .ini file -->
    <apply
     executable="unittest"
     failonerror="true"
     dir="${build.target}/bootstrap/test/"
     dest="${build.target}/test-results/"
    >
      <env key="USE_XP" value="${build.target}/bootstrap/test/"/>
      <arg value="-l"/>
      <arg value="unittest.XmlTestListener"/>
      <chainedmapper>
        <flattenmapper/>
        <mapper type="glob" from="*.ini" to="*.xml"/>
      </chainedmapper>
      <targetfile/>
      <srcfile/>
      <fileset refid="build.testConfigurations"/>
    </apply>
  </target>

  <target name="xp.unittest.from-package" unless="skip.tests" if="build.testPackage" depends="xp.unittest.mkresult">
    <echo>===> Testing ${ivy.organisation}#${ivy.module} - by package</echo>

    <!-- Execute unittest -->
    <exec
     executable="unittest"
     failonerror="true"
     dir="${build.target}/bootstrap/test/"
    >
      <env key="USE_XP" value="${build.target}/bootstrap/test/"/>
      <arg value="-l"/>
      <arg value="unittest.XmlTestListener"/>
      <arg value="${build.target}/test-results/package.xml"/>
      <arg value="${build.testPackage}"/>
    </exec>
  </target>

  <target name="xp.unittest.dummy.check">
    <condition property="xp.unittest.usefallback">
      <not>
        <or>
          <isset property="xp.test.exist.unittest.ini"/>
          <isset property="build.testPackage"/>
        </or>
      </not>
    </condition>
  </target>

  <target name="xp.unittest.dummy" depends="xp.unittest.dummy.check" if="xp.unittest.usefallback">
    <echo>Creating dummy testresult because no tests were found.</echo>
    <echo file="${build.target}/test-results/dummy.xml">
      &lt;testsuites&gt;&lt;testsuite name="(none)" tests="1" failures="0" errors="0" skipped="1"&gt;&lt;testcase name="(none)"/&gt;&lt;/testsuite&gt;&lt;/testsuites&gt;
    </echo>
  </target>

  <target name="xp.unittest.checkconf" depends="xp.setup.ivy">
    <condition property="xp.test.checkconf">
      <contains string="${ivy.configurations}" substring="test"/>
    </condition>
  </target>

  <target name="xp.unittest.conffailure" depends="xp.unittest.checkconf" unless="xp.test.checkconf">
    <echo level="warning">"test" configuration required in ivy.xml when running tests.</echo>
  </target>

  <target name="xp.unittest" extensionOf="test" depends="xp.unittest.conffailure, xp.unittest.from-ini, xp.unittest.from-package, xp.unittest.dummy"/>
</project>
