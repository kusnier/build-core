<?xml version="1.0" encoding="UTF-8"?>
<project name="xp-framework-deps" basedir="."  xmlns:ivy="antlib:org.apache.ivy.ant">

  <target name="xp.fetch.dependencies.clear">
    <!--
     ! Declare all libs as "dependant" on ivy.xml - once this file has been
     ! changed, all libs will be re-fetched if necessary
     -->
    <dependset>
      <srcfilelist dir="${basedir}" files="ivy.xml"/>
      <targetfileset dir="${build.target}/lib"/>
    </dependset>

    <available file="${build.target}/lib/.extracted" property="xp.fetch.dependencies.exist"/>
  </target>

  <target name="xp.fetch.dependencies" depends="xp.setup.ivy, xp.fetch.dependencies.clear" unless="xp.fetch.dependencies.exist">

    <!-- Fetch libs -->
    <ivy:resolve/>
    <ivy:report
     todir="${build.target.reports.resolve}"
     outputpattern="resolve-[conf].[ext]"
    />
    <ivy:retrieve
     pattern="${build.target}/lib/[conf]/[type]/[artifact](-[branch])-[revision].[ext]"
    />

    <!-- Touch libs, so they are newer than ivy.xml -->
    <touch mkdirs="true" file="${build.target}/lib/.extracted"/>
    <touch>
      <fileset dir="${build.target}/lib" includes="**/*"/>
    </touch>
  </target>

  <target name="xp.fetch.required.plugins" depends="xp.setup.ivy, xp.fetch.dependencies.clear">
    <ivy:resolve
     organisation="net.xp_framework.build"
     module="plugins-core"
     revision="latest.integration"
     conf="compile"
     inline="true"
     log="quiet"
    />

    <ivy:retrieve
     organisation="net.xp_framework.build"
     module="plugins-core"
     revision="latest.integration"
     conf="compile"
     inline="true"
     pattern="${build.target}/lib/[conf]/[type]/[artifact](-[branch])-[revision].[ext]"
     log="quiet"
    />
  </target>

  <target name="xp.extract.checkbootstrap" depends="xp.fetch.dependencies">
    <dependset>
      <srcfileset dir="${build.target}/lib" includes="*/bootstrap/*.zip"/>
      <targetfileset dir="${build.target}" includes="bootstrap/**"/>
    </dependset>
    
    <available property="xp.bootstrap.exists" file="${build.target}/bootstrap/.extracted"/>
  </target>

  <target name="xp.extract.bootstrap.unzip" depends="xp.extract.checkbootstrap, xp.fetch.dependencies" unless="xp.bootstrap.exists">
    <!-- Unzip bootstrap for default conf -->
    <unzip dest="${build.target}/bootstrap/default">
      <fileset dir="${build.target}/lib" includes="default/bootstrap/*.zip"/>
    </unzip>

    <!-- Unzip bootstrap for test conf -->
    <unzip dest="${build.target}/bootstrap/test">
      <fileset dir="${build.target}/lib" includes="test/bootstrap/*.zip"/>
    </unzip>

    <!-- Unzip bootstrap for compile conf -->
    <unzip dest="${build.target}/bootstrap/compile">
      <fileset dir="${build.target}/lib" includes="compile/bootstrap/*.zip"/>
    </unzip>

    <!-- Copy configuration -->
    <copy todir="${build.target}/bootstrap/test">
      <fileset refid="build.configSourceDirectory"/>
    </copy>
    <touch mkdirs="true" file="${build.target}/bootstrap/.extracted"/>

    <touch>
      <fileset dir="${build.target}/bootstrap" includes="**/*"/>
    </touch>
  </target>

  <target name="xp.extract.checkplugins" depends="xp.fetch.dependencies">
    <dependset>
      <srcfileset dir="${build.target}/lib" includes="*/plugins/*.zip"/>
      <targetfileset dir="${build.target}" includes="plugins/**"/>
    </dependset>

    <available property="xp.plugins.exists" file="${build.target}/plugins/.extracted"/>
  </target>

  <target name="xp.extract.plugins.unzip" depends="xp.extract.checkplugins, xp.fetch.dependencies" unless="xp.plugins.exists">
    <unzip dest="${build.target}/plugins">
      <fileset dir="${build.target}/lib/" includes="*/plugin/*.zip"/>
    </unzip>
    <touch mkdirs="true" file="${build.target}/plugins/.extracted"/>

    <touch>
      <fileset dir="${build.target}/plugins" includes="**/*"/>
    </touch>

  </target>

  <target name="xp.fetch.generatepth">

    <!-- Build classpath for default conf -->
    <gen-pth conf="default"/>

    <!-- Build classpath for test conf: add test classes -->
    <gen-pth conf="test">
      <additional-paths>
        <pathelement path="${build.target.testClasses}"/>
      </additional-paths>
    </gen-pth>

    <!-- Build classpath for compile conf -->
    <gen-pth conf="compile"/>
  </target>

  <target
   name="xp.extract.bootstrap"
   extensionOf="prepare"
   depends="xp.fetch.required.plugins, xp.fetch.dependencies, xp.extract.checkbootstrap, xp.extract.bootstrap.unzip, xp.extract.plugins.unzip, xp.fetch.generatepth"/>
</project>
